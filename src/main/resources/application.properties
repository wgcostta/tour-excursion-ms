# ==============================================
# TOUR APPLICATION - CONFIGURAÇÃO CORRIGIDA
# ==============================================

# Application
spring.application.name=tour-application
spring.profiles.active=dev

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# H2 Database
spring.datasource.url=jdbc:h2:mem:tourdb
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.driver-class-name=org.h2.Driver

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Jackson JSON
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=non_null

# Management/Actuator
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# Logging - CONFIGURAÇÃO MELHORADA PARA DEBUG
logging.level.com.tourapp=DEBUG
logging.level.br.com.tourapp.tourapp.security.config.tourapp.GoogleTokenVerifier=DEBUG
logging.level.br.com.tourapp.tourapp.service.tourapp.UserService=DEBUG
logging.level.br.com.tourapp.tourapp.controller.tourapp.AuthController=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - [%thread] %-5level %logger{36} - %msg%n

# SpringDoc/Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.try-it-out-enabled=true

# File Upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT Configuration - TOKENS INTERNOS DA APLICAÇÃO
app.jwt.secret=${JWT_SECRET:mySuperSecretKeyForInternalJWTTokensOnly123456789}

app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000

# Google OAuth2 Configuration - ESSENCIAL PARA VALIDAÇÃO DO GOOGLE ID TOKEN
google.client-id=${GOOGLE_CLIENT_ID:sua_google_client_id_aqui}

# Spring Security OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:sua_google_client_id_aqui}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:sua_google_client_secret_aqui}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# OAuth2 Redirect Configuration
app.oauth2.redirectUri=${OAUTH2_REDIRECT_URI:http://localhost:3000/auth/callback}

# Frontend URL
app.frontend-url=${FRONT_URL:http://localhost:3000}

# Server Configuration
server.port=${PORT:8080}
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# CORS Configuration (já está no SecurityConfig, mas pode ser útil)
# spring.web.cors.allowed-origins=http://localhost:3000
# spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# spring.web.cors.allowed-headers=*
# spring.web.cors.allow-credentials=true